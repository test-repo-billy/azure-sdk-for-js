/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { SimplePollerLike, OperationState } from "@azure/core-lro";
import {
  RunDiskInspectionInput,
  DiskInspectionCreateOptionalParams,
  DiskInspectionCreateResponse,
  DiskInspectionGetOptionalParams,
  DiskInspectionGetResponse,
} from "../models/index.js";

/** Interface representing a DiskInspection. */
export interface DiskInspection {
  /**
   * Creates a request for executing disk Inspection.
   * @param location The name of the Azure region.
   * @param runDiskInspectionInput RunDiskInspection object supplied in the body of the Post run disk
   *                               inspection operation.
   * @param options The options parameters.
   */
  beginCreate(
    location: string,
    runDiskInspectionInput: RunDiskInspectionInput,
    options?: DiskInspectionCreateOptionalParams,
  ): Promise<
    SimplePollerLike<
      OperationState<DiskInspectionCreateResponse>,
      DiskInspectionCreateResponse
    >
  >;
  /**
   * Creates a request for executing disk Inspection.
   * @param location The name of the Azure region.
   * @param runDiskInspectionInput RunDiskInspection object supplied in the body of the Post run disk
   *                               inspection operation.
   * @param options The options parameters.
   */
  beginCreateAndWait(
    location: string,
    runDiskInspectionInput: RunDiskInspectionInput,
    options?: DiskInspectionCreateOptionalParams,
  ): Promise<DiskInspectionCreateResponse>;
  /**
   * Gets a specific Compute diagnostic for a subscription in a location.
   * @param location The name of the Azure region.
   * @param options The options parameters.
   */
  get(
    location: string,
    options?: DiskInspectionGetOptionalParams,
  ): Promise<DiskInspectionGetResponse>;
}
