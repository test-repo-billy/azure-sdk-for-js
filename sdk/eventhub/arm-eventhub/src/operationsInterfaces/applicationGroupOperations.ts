/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  ApplicationGroup,
  ApplicationGroupCreateOrUpdateApplicationGroupOptionalParams,
  ApplicationGroupCreateOrUpdateApplicationGroupResponse,
  ApplicationGroupDeleteOptionalParams,
  ApplicationGroupGetOptionalParams,
  ApplicationGroupGetResponse,
} from "../models";

/** Interface representing a ApplicationGroupOperations. */
export interface ApplicationGroupOperations {
  /**
   * Creates or updates an ApplicationGroup for a Namespace.
   * @param resourceGroupName Name of the resource group within the azure subscription.
   * @param namespaceName The Namespace name
   * @param applicationGroupName The Application Group name
   * @param parameters The ApplicationGroup.
   * @param options The options parameters.
   */
  createOrUpdateApplicationGroup(
    resourceGroupName: string,
    namespaceName: string,
    applicationGroupName: string,
    parameters: ApplicationGroup,
    options?: ApplicationGroupCreateOrUpdateApplicationGroupOptionalParams,
  ): Promise<ApplicationGroupCreateOrUpdateApplicationGroupResponse>;
  /**
   * Deletes an ApplicationGroup for a Namespace.
   * @param resourceGroupName Name of the resource group within the azure subscription.
   * @param namespaceName The Namespace name
   * @param applicationGroupName The Application Group name
   * @param options The options parameters.
   */
  delete(
    resourceGroupName: string,
    namespaceName: string,
    applicationGroupName: string,
    options?: ApplicationGroupDeleteOptionalParams,
  ): Promise<void>;
  /**
   * Gets an ApplicationGroup for a Namespace.
   * @param resourceGroupName Name of the resource group within the azure subscription.
   * @param namespaceName The Namespace name
   * @param applicationGroupName The Application Group name
   * @param options The options parameters.
   */
  get(
    resourceGroupName: string,
    namespaceName: string,
    applicationGroupName: string,
    options?: ApplicationGroupGetOptionalParams,
  ): Promise<ApplicationGroupGetResponse>;
}
